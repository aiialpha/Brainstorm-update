# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*
import React, { useState } from 'react';
import {
  Carousel,
  CarouselItem,

  CarouselIndicators,
 
  Card, CardBody, CardTitle, CardSubtitle, CardText
} from 'reactstrap';

const items = [
  {
    id: 1,
    altText: 'Slide 1',
    caption: 'Slide 1',
  },
  {
    id: 2,
    altText: 'Slide 2',
    caption: 'Slide 2',
  },
  {
    id: 3,
    altText: 'Slide 3',
    caption: 'Slide 3',
  },
];

function Soft(props) {
  const [activeIndex, setActiveIndex] = useState(0);
  const [animating, setAnimating] = useState(false);

  const next = () => {
    if (animating) return;
    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;
    setActiveIndex(nextIndex);
  };

  const previous = () => {
    if (animating) return;
    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;
    setActiveIndex(nextIndex);
  };

  const goToIndex = (newIndex) => {
    if (animating) return;
    setActiveIndex(newIndex);
  };

  const slides = items.map((item) => {
    return (
      <CarouselItem
        className="tab-container"
        tag="div"
        // key={item.id}
        onExiting={() => setAnimating(true)}
        onExited={() => setAnimating(false)}
      >
          <Card className='border-0'>
        {/* Add your card content here */}
        <CardBody>
          <CardTitle tag="h5">{item.caption}</CardTitle>
          <CardSubtitle tag="h6" className="mb-2 text-muted slider-card tabs">
            Subtitle
          </CardSubtitle>
      
        </CardBody>
      </Card>
       
      </CarouselItem>
    );
  });

  return (
    <>
      <div className="tabs-container">
        <div className="tabs">
          
        </div>
      </div>
    </>
  );
}

export default Soft;